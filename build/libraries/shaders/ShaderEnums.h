#include <cstdint>
#include <string>

namespace shader {

namespace gpu {
namespace vertex { enum {
DrawTexcoordRectTransformUnitQuad = 1,
DrawTransformUnitQuad = 2,
DrawTransformVertexPosition = 3,
DrawUnitQuadTexcoord = 4,
DrawVertexPosition = 5,
DrawViewportQuadTransformTexcoord = 6,
}; } // vertex 
namespace fragment { enum {
DrawColor = 7,
DrawColoredTexture = 8,
DrawNada = 9,
DrawTexture = 10,
DrawTextureMirroredX = 11,
DrawTextureOpaque = 12,
DrawWhite = 13,
}; } // fragment 
namespace program { enum {
DrawTexture = (vertex::DrawUnitQuadTexcoord << 16) |  fragment::DrawTexture,
DrawTextureMirroredX = (vertex::DrawUnitQuadTexcoord << 16) |  fragment::DrawTextureMirroredX,
DrawTransformedTexture = (vertex::DrawTransformUnitQuad << 16) |  fragment::DrawTexture,
drawColor = (vertex::DrawTransformVertexPosition << 16) |  fragment::DrawColor,
drawNothing = (vertex::DrawVertexPosition << 16) |  fragment::DrawNada,
drawTextureOpaqueTexcoordRect = (vertex::DrawTexcoordRectTransformUnitQuad << 16) |  fragment::DrawTextureOpaque,
drawTransformUnitQuadTextureOpaque = (vertex::DrawTransformUnitQuad << 16) |  fragment::DrawTextureOpaque,
drawUnitQuatTextureOpaque = (vertex::DrawUnitQuadTexcoord << 16) |  fragment::DrawTextureOpaque,
}; } // program 
} // namespace gpu
namespace graphics {
namespace vertex { enum {
skybox = 14,
}; } // vertex 
namespace fragment { enum {
skybox = 15,
}; } // fragment 
namespace program { enum {
skybox = (vertex::skybox << 16) |  fragment::skybox,
}; } // program 
} // namespace graphics
namespace display_plugins {
namespace fragment { enum {
InterleavedSrgbToLinear = 16,
SrgbToLinear = 17,
}; } // fragment 
namespace program { enum {
InterleavedSrgbToLinear = (gpu::vertex::DrawUnitQuadTexcoord << 16) |  fragment::InterleavedSrgbToLinear,
SrgbToLinear = (gpu::vertex::DrawUnitQuadTexcoord << 16) |  fragment::SrgbToLinear,
}; } // program 
} // namespace display_plugins
namespace procedural {
namespace fragment { enum {
proceduralSkybox = 18,
}; } // fragment 
namespace program { enum {
proceduralSkybox = (graphics::vertex::skybox << 16) |  fragment::proceduralSkybox,
}; } // program 
} // namespace procedural
namespace render {
namespace vertex { enum {
drawCellBounds = 19,
drawItemBounds = 20,
drawItemStatus = 21,
}; } // vertex 
namespace fragment { enum {
blurGaussianDepthAwareH = 22,
blurGaussianDepthAwareV = 23,
blurGaussianH = 24,
blurGaussianV = 25,
drawCellBounds = 26,
drawItemBounds = 27,
drawItemStatus = 28,
drawLODReticle = 29,
}; } // fragment 
namespace program { enum {
blurGaussianDepthAwareH = (gpu::vertex::DrawUnitQuadTexcoord << 16) |  fragment::blurGaussianDepthAwareH,
blurGaussianDepthAwareV = (gpu::vertex::DrawUnitQuadTexcoord << 16) |  fragment::blurGaussianDepthAwareV,
blurGaussianH = (gpu::vertex::DrawUnitQuadTexcoord << 16) |  fragment::blurGaussianH,
blurGaussianV = (gpu::vertex::DrawUnitQuadTexcoord << 16) |  fragment::blurGaussianV,
drawCellBounds = (vertex::drawCellBounds << 16) |  fragment::drawCellBounds,
drawItemBounds = (vertex::drawItemBounds << 16) |  fragment::drawItemBounds,
drawItemStatus = (vertex::drawItemStatus << 16) |  fragment::drawItemStatus,
drawLODReticle = (gpu::vertex::DrawTransformUnitQuad << 16) |  fragment::drawLODReticle,
}; } // program 
} // namespace render
namespace render_utils {
namespace vertex { enum {
Highlight_aabox = 30,
animdebugdraw = 31,
debug_deferred_buffer = 32,
deferred_light = 33,
deferred_light_limited = 34,
deferred_light_point = 35,
deferred_light_spot = 36,
deformed_model = 37,
deformed_model_dq = 38,
deformed_model_normal_map = 39,
deformed_model_normal_map_dq = 40,
deformed_model_shadow = 41,
deformed_model_shadow_dq = 42,
drawWorkloadProxy = 43,
drawWorkloadView = 44,
fxaa = 45,
glowLine = 46,
hmd_ui = 47,
lightClusters_drawClusterContent = 48,
lightClusters_drawClusterFromDepth = 49,
lightClusters_drawGrid = 50,
model = 51,
model_normal_map = 52,
model_shadow = 53,
parabola = 54,
sdf_text3D = 55,
simple = 56,
simple_fade = 57,
standardTransformPNTC = 58,
}; } // vertex 
namespace fragment { enum {
BloomApply = 59,
BloomThreshold = 60,
Haze = 61,
Highlight = 62,
Highlight_filled = 63,
animdebugdraw = 64,
debug_deferred_buffer = 65,
directional_ambient_light = 66,
directional_ambient_light_shadow = 67,
directional_skybox_light = 68,
directional_skybox_light_shadow = 69,
drawWorkloadProxy = 70,
drawWorkloadView = 71,
forward_model = 72,
forward_model_normal_map = 73,
forward_model_translucent = 74,
forward_model_unlit = 75,
forward_simple = 76,
forward_simple_textured = 77,
forward_simple_textured_transparent = 78,
forward_simple_textured_unlit = 79,
fxaa = 80,
fxaa_blend = 81,
glowLine = 82,
grid = 83,
hmd_ui = 84,
lightClusters_drawClusterContent = 85,
lightClusters_drawClusterFromDepth = 86,
lightClusters_drawGrid = 87,
local_lights_drawOutline = 88,
local_lights_shading = 89,
model = 90,
model_fade = 91,
model_lightmap = 92,
model_lightmap_fade = 93,
model_lightmap_normal_map = 94,
model_lightmap_normal_map_fade = 95,
model_normal_map = 96,
model_normal_map_fade = 97,
model_shadow = 98,
model_shadow_fade = 99,
model_translucent = 100,
model_translucent_fade = 101,
model_translucent_normal_map = 102,
model_translucent_normal_map_fade = 103,
model_translucent_unlit = 104,
model_translucent_unlit_fade = 105,
model_unlit = 106,
model_unlit_fade = 107,
nop = 108,
parabola = 109,
parabola_translucent = 110,
sdf_text3D = 111,
sdf_text3D_transparent = 112,
simple = 113,
simple_opaque_web_browser = 114,
simple_textured = 115,
simple_textured_fade = 116,
simple_textured_unlit = 117,
simple_textured_unlit_fade = 118,
simple_transparent = 119,
simple_transparent_textured = 120,
simple_transparent_textured_fade = 121,
simple_transparent_textured_unlit = 122,
simple_transparent_textured_unlit_fade = 123,
simple_transparent_web_browser = 124,
ssao_debugOcclusion = 125,
ssao_makeHorizontalBlur = 126,
ssao_makeOcclusion = 127,
ssao_makePyramid = 128,
ssao_makeVerticalBlur = 129,
standardDrawTexture = 130,
standardDrawTextureNoBlend = 131,
stencil_drawMask = 132,
subsurfaceScattering_drawScattering = 133,
subsurfaceScattering_makeLUT = 134,
subsurfaceScattering_makeProfile = 135,
subsurfaceScattering_makeSpecularBeckmann = 136,
surfaceGeometry_copyDepth = 137,
surfaceGeometry_downsampleDepthNormal = 138,
surfaceGeometry_makeCurvature = 139,
surfaceGeometry_makeLinearDepth = 140,
taa = 141,
taa_blend = 142,
toneMapping = 143,
velocityBuffer_cameraMotion = 144,
zone_drawAmbient = 145,
zone_drawKeyLight = 146,
zone_drawSkybox = 147,
}; } // fragment 
namespace program { enum {
animdebugdraw = (vertex::animdebugdraw << 16) |  fragment::animdebugdraw,
bloomApply = (gpu::vertex::DrawTransformUnitQuad << 16) |  fragment::BloomApply,
bloomThreshold = (gpu::vertex::DrawTransformUnitQuad << 16) |  fragment::BloomThreshold,
debug_deferred_buffer = (vertex::debug_deferred_buffer << 16) |  fragment::debug_deferred_buffer,
deformed_model = (vertex::deformed_model << 16) |  fragment::model,
deformed_model_dq = (vertex::deformed_model_dq << 16) |  fragment::model,
deformed_model_fade = (vertex::deformed_model << 16) |  fragment::model_fade,
deformed_model_fade_dq = (vertex::deformed_model_dq << 16) |  fragment::model_fade,
deformed_model_normal_map = (vertex::deformed_model_normal_map << 16) |  fragment::model_normal_map,
deformed_model_normal_map_dq = (vertex::deformed_model_normal_map_dq << 16) |  fragment::model_normal_map,
deformed_model_normal_map_fade = (vertex::deformed_model_normal_map << 16) |  fragment::model_normal_map_fade,
deformed_model_normal_map_fade_dq = (vertex::deformed_model_normal_map_dq << 16) |  fragment::model_normal_map_fade,
deformed_model_normal_map_translucent = (vertex::deformed_model_normal_map << 16) |  fragment::model_translucent_normal_map,
deformed_model_normal_map_translucent_dq = (vertex::deformed_model_normal_map_dq << 16) |  fragment::model_translucent_normal_map,
deformed_model_normal_map_translucent_fade = (vertex::deformed_model_normal_map << 16) |  fragment::model_translucent_normal_map_fade,
deformed_model_normal_map_translucent_fade_dq = (vertex::deformed_model_normal_map_dq << 16) |  fragment::model_translucent_normal_map_fade,
deformed_model_shadow = (vertex::deformed_model_shadow << 16) |  fragment::model_shadow,
deformed_model_shadow_dq = (vertex::deformed_model_shadow_dq << 16) |  fragment::model_shadow,
deformed_model_shadow_fade = (vertex::deformed_model_shadow << 16) |  fragment::model_shadow_fade,
deformed_model_shadow_fade_dq = (vertex::deformed_model_shadow_dq << 16) |  fragment::model_shadow_fade,
deformed_model_translucent = (vertex::deformed_model << 16) |  fragment::model_translucent,
deformed_model_translucent_dq = (vertex::deformed_model_dq << 16) |  fragment::model_translucent,
deformed_model_translucent_fade = (vertex::deformed_model << 16) |  fragment::model_translucent_fade,
deformed_model_translucent_fade_dq = (vertex::deformed_model_dq << 16) |  fragment::model_translucent_fade,
directional_ambient_light = (vertex::deferred_light << 16) |  fragment::directional_ambient_light,
directional_ambient_light_shadow = (vertex::deferred_light << 16) |  fragment::directional_ambient_light_shadow,
directional_skybox_light = (vertex::deferred_light << 16) |  fragment::directional_skybox_light,
directional_skybox_light_shadow = (vertex::deferred_light << 16) |  fragment::directional_skybox_light_shadow,
drawWorkloadProxy = (vertex::drawWorkloadProxy << 16) |  fragment::drawWorkloadProxy,
drawWorkloadView = (vertex::drawWorkloadView << 16) |  fragment::drawWorkloadView,
forward_deformed_model = (vertex::deformed_model << 16) |  fragment::forward_model,
forward_deformed_model_dq = (vertex::deformed_model_dq << 16) |  fragment::forward_model,
forward_deformed_model_normal_map = (vertex::deformed_model_normal_map << 16) |  fragment::forward_model_normal_map,
forward_deformed_model_normal_map_dq = (vertex::deformed_model_normal_map_dq << 16) |  fragment::forward_model_normal_map,
forward_deformed_translucent = (vertex::deformed_model << 16) |  fragment::forward_model_translucent,
forward_deformed_translucent_dq = (vertex::deformed_model_dq << 16) |  fragment::forward_model_translucent,
forward_deformed_translucent_normal_map = (vertex::deformed_model_normal_map << 16) |  fragment::forward_model_translucent,
forward_deformed_translucent_normal_map_dq = (vertex::deformed_model_normal_map_dq << 16) |  fragment::forward_model_translucent,
forward_model = (vertex::model << 16) |  fragment::forward_model,
forward_model_normal_map = (vertex::model_normal_map << 16) |  fragment::forward_model_normal_map,
forward_model_normal_map_translucent = (vertex::model_normal_map << 16) |  fragment::forward_model_translucent,
forward_model_translucent = (vertex::model << 16) |  fragment::forward_model_translucent,
forward_model_unlit = (vertex::model << 16) |  fragment::forward_model_unlit,
forward_simple_textured = (vertex::simple << 16) |  fragment::forward_simple_textured,
forward_simple_textured_transparent = (vertex::simple << 16) |  fragment::forward_simple_textured_transparent,
forward_simple_textured_unlit = (vertex::simple << 16) |  fragment::forward_simple_textured_unlit,
fxaa = (gpu::vertex::DrawUnitQuadTexcoord << 16) |  fragment::fxaa,
fxaa_blend = (gpu::vertex::DrawUnitQuadTexcoord << 16) |  fragment::fxaa_blend,
glowLine = (vertex::glowLine << 16) |  fragment::glowLine,
grid = (vertex::standardTransformPNTC << 16) |  fragment::grid,
haze = (gpu::vertex::DrawViewportQuadTransformTexcoord << 16) |  fragment::Haze,
highlight = (gpu::vertex::DrawViewportQuadTransformTexcoord << 16) |  fragment::Highlight,
highlight_aabox = (vertex::Highlight_aabox << 16) |  fragment::nop,
highlight_filled = (gpu::vertex::DrawViewportQuadTransformTexcoord << 16) |  fragment::Highlight_filled,
hmd_ui = (vertex::hmd_ui << 16) |  fragment::hmd_ui,
lightClusters_drawClusterContent = (gpu::vertex::DrawUnitQuadTexcoord << 16) |  fragment::lightClusters_drawClusterContent,
lightClusters_drawClusterFromDepth = (gpu::vertex::DrawUnitQuadTexcoord << 16) |  fragment::lightClusters_drawClusterFromDepth,
lightClusters_drawGrid = (vertex::lightClusters_drawGrid << 16) |  fragment::lightClusters_drawGrid,
local_lights_drawOutline = (vertex::deferred_light << 16) |  fragment::local_lights_drawOutline,
local_lights_shading = (vertex::deferred_light << 16) |  fragment::local_lights_shading,
model = (vertex::model << 16) |  fragment::model,
model_fade = (vertex::model << 16) |  fragment::model_fade,
model_lightmap = (vertex::model << 16) |  fragment::model_lightmap,
model_lightmap_fade = (vertex::model << 16) |  fragment::model_lightmap_fade,
model_lightmap_normal_map = (vertex::model_normal_map << 16) |  fragment::model_lightmap_normal_map,
model_lightmap_normal_map_fade = (vertex::model_normal_map << 16) |  fragment::model_lightmap_normal_map_fade,
model_normal_map = (vertex::model_normal_map << 16) |  fragment::model_normal_map,
model_normal_map_fade = (vertex::model_normal_map << 16) |  fragment::model_normal_map_fade,
model_shadow = (vertex::model_shadow << 16) |  fragment::model_shadow,
model_shadow_fade = (vertex::model_shadow << 16) |  fragment::model_shadow_fade,
model_translucent = (vertex::model << 16) |  fragment::model_translucent,
model_translucent_fade = (vertex::model << 16) |  fragment::model_translucent_fade,
model_translucent_normal_map = (vertex::model_normal_map << 16) |  fragment::model_translucent_normal_map,
model_translucent_normal_map_fade = (vertex::model_normal_map << 16) |  fragment::model_translucent_normal_map_fade,
model_translucent_unlit = (vertex::model << 16) |  fragment::model_translucent_unlit,
model_translucent_unlit_fade = (vertex::model << 16) |  fragment::model_translucent_unlit_fade,
model_unlit = (vertex::model << 16) |  fragment::model_unlit,
model_unlit_fade = (vertex::model << 16) |  fragment::model_unlit_fade,
parabola = (vertex::parabola << 16) |  fragment::parabola,
parabola_translucent = (vertex::parabola << 16) |  fragment::parabola_translucent,
sdf_text3D = (vertex::sdf_text3D << 16) |  fragment::sdf_text3D,
sdf_text3D_transparent = (vertex::sdf_text3D << 16) |  fragment::sdf_text3D_transparent,
simple = (vertex::simple << 16) |  fragment::simple,
simple_opaque_web_browser = (vertex::simple << 16) |  fragment::simple_opaque_web_browser,
simple_textured = (vertex::simple << 16) |  fragment::simple_textured,
simple_textured_fade = (vertex::simple_fade << 16) |  fragment::simple_textured_fade,
simple_textured_unlit = (vertex::simple << 16) |  fragment::simple_textured_unlit,
simple_textured_unlit_fade = (vertex::simple_fade << 16) |  fragment::simple_textured_unlit_fade,
simple_transparent = (vertex::simple << 16) |  fragment::simple_transparent,
simple_transparent_textured = (vertex::simple << 16) |  fragment::simple_transparent_textured,
simple_transparent_textured_fade = (vertex::simple_fade << 16) |  fragment::simple_transparent_textured_fade,
simple_transparent_textured_unlit = (vertex::simple << 16) |  fragment::simple_transparent_textured_unlit,
simple_transparent_textured_unlit_fade = (vertex::simple_fade << 16) |  fragment::simple_transparent_textured_unlit_fade,
simple_transparent_web_browser = (vertex::simple << 16) |  fragment::simple_transparent_web_browser,
ssao_debugOcclusion = (gpu::vertex::DrawViewportQuadTransformTexcoord << 16) |  fragment::ssao_debugOcclusion,
ssao_makeHorizontalBlur = (gpu::vertex::DrawViewportQuadTransformTexcoord << 16) |  fragment::ssao_makeHorizontalBlur,
ssao_makeOcclusion = (gpu::vertex::DrawViewportQuadTransformTexcoord << 16) |  fragment::ssao_makeOcclusion,
ssao_makeVerticalBlur = (gpu::vertex::DrawViewportQuadTransformTexcoord << 16) |  fragment::ssao_makeVerticalBlur,
standardDrawTexture = (vertex::standardTransformPNTC << 16) |  fragment::standardDrawTexture,
standardDrawTextureNoBlend = (vertex::standardTransformPNTC << 16) |  fragment::standardDrawTextureNoBlend,
stencil_drawMask = (gpu::vertex::DrawUnitQuadTexcoord << 16) |  fragment::stencil_drawMask,
subsurfaceScattering_drawScattering = (gpu::vertex::DrawUnitQuadTexcoord << 16) |  fragment::subsurfaceScattering_drawScattering,
subsurfaceScattering_makeLUT = (gpu::vertex::DrawUnitQuadTexcoord << 16) |  fragment::subsurfaceScattering_makeLUT,
subsurfaceScattering_makeProfile = (gpu::vertex::DrawUnitQuadTexcoord << 16) |  fragment::subsurfaceScattering_makeProfile,
subsurfaceScattering_makeSpecularBeckmann = (gpu::vertex::DrawUnitQuadTexcoord << 16) |  fragment::subsurfaceScattering_makeSpecularBeckmann,
surfaceGeometry_downsampleDepthNormal = (gpu::vertex::DrawViewportQuadTransformTexcoord << 16) |  fragment::surfaceGeometry_downsampleDepthNormal,
surfaceGeometry_makeCurvature = (gpu::vertex::DrawViewportQuadTransformTexcoord << 16) |  fragment::surfaceGeometry_makeCurvature,
surfaceGeometry_makeLinearDepth = (gpu::vertex::DrawViewportQuadTransformTexcoord << 16) |  fragment::surfaceGeometry_makeLinearDepth,
taa = (gpu::vertex::DrawUnitQuadTexcoord << 16) |  fragment::taa,
taa_blend = (gpu::vertex::DrawUnitQuadTexcoord << 16) |  fragment::taa_blend,
toneMapping = (gpu::vertex::DrawViewportQuadTransformTexcoord << 16) |  fragment::toneMapping,
velocityBuffer_cameraMotion = (gpu::vertex::DrawViewportQuadTransformTexcoord << 16) |  fragment::velocityBuffer_cameraMotion,
zone_drawAmbient = (gpu::vertex::DrawTransformUnitQuad << 16) |  fragment::zone_drawAmbient,
zone_drawKeyLight = (gpu::vertex::DrawTransformUnitQuad << 16) |  fragment::zone_drawKeyLight,
zone_drawSkybox = (gpu::vertex::DrawTransformUnitQuad << 16) |  fragment::zone_drawSkybox,
}; } // program 
} // namespace render_utils
namespace entities_renderer {
namespace vertex { enum {
paintStroke = 148,
paintStroke_fade = 149,
polyvox = 150,
polyvox_fade = 151,
textured_particle = 152,
}; } // vertex 
namespace fragment { enum {
paintStroke = 153,
paintStroke_fade = 154,
polyvox = 155,
polyvox_fade = 156,
textured_particle = 157,
}; } // fragment 
namespace program { enum {
paintStroke = (vertex::paintStroke << 16) |  fragment::paintStroke,
polyvox = (vertex::polyvox << 16) |  fragment::polyvox,
polyvox_fade = (vertex::polyvox_fade << 16) |  fragment::polyvox_fade,
textured_particle = (vertex::textured_particle << 16) |  fragment::textured_particle,
}; } // program 
} // namespace entities_renderer


}

